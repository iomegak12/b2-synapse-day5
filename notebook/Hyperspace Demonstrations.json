{
	"name": "Hyperspace Demonstrations",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool001",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "b525d0f5-ac0c-40a9-9046-71f40000b7e0"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ca663af4-1306-4dfe-8a9d-19990935c081/resourceGroups/day5resourcegroup/providers/Microsoft.Synapse/workspaces/ramsynapsev50/bigDataPools/SparkPool001",
				"name": "SparkPool001",
				"type": "Spark",
				"endpoint": "https://ramsynapsev50.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool001",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import random \r\n",
					"\r\n",
					"session_id = random.randint(1,1000000000)\r\n",
					"data_path = \"/hyperspace/data-{0}\".format(session_id)\r\n",
					"index_path = \"/hyperspace/indexes-{0}\".format(session_id)\r\n",
					"\r\n",
					"spark.conf.set(\"spark.hyperspace.system.path\", index_path)\r\n",
					""
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# disable Broadcast when Spark Joins datasets and one-side is having small dataset\r\n",
					"\r\n",
					"spark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", -1)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(spark.conf.get(\"spark.sql.autoBroadcastJoinThreshold\"))"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.conf.set(\"spark.hyperspace.explain.displayMode\", \"html\")"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.types import *\r\n",
					"\r\n",
					"departments = [(10, \"Accounting\", \"New York\"), (20, \"Research\", \"Bangalore\"), (30, \"IT\", \"Hyderabad\"),\r\n",
					"    (40, \"Operations\", \"Singapore\")]\r\n",
					"\r\n",
					"employees = [\r\n",
					"    (1, \"Ramkumar\", 20),\r\n",
					"    (2, \"Rajkumar\", 30), \r\n",
					"    (485, \"Rajesh\", 40), \r\n",
					"    (348, \"Smitha\", 40), \r\n",
					"    (2922, \"Bhavana\", 20), \r\n",
					"    (73489, \"Mary\", 20), \r\n",
					"    (6, \"Jacob\", 10), \r\n",
					"    (7, \"Ismail\", 10)]\r\n",
					"\r\n",
					"department_schema = StructType([\r\n",
					"    StructField(\"deptId\", IntegerType(), True),\r\n",
					"    StructField(\"deptName\", StringType(), True),\r\n",
					"    StructField(\"location\", StringType(), True),\r\n",
					"])\r\n",
					"\r\n",
					"employee_schema = StructType([\r\n",
					"    StructField(\"empId\", IntegerType(), True),\r\n",
					"    StructField(\"empName\", StringType(), True),\r\n",
					"    StructField(\"deptId\", IntegerType(), True)\r\n",
					"])\r\n",
					"\r\n",
					"departments_df = spark.createDataFrame(departments, department_schema)\r\n",
					"employees_df = spark.createDataFrame(employees, employee_schema)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"employee_location = data_path + \"/employees.parquet\"\r\n",
					"department_location = data_path + \"/departments.parquet\"\r\n",
					"\r\n",
					"employees_df \\\r\n",
					"    .write \\\r\n",
					"    .mode(\"overwrite\") \\\r\n",
					"    .parquet(employee_location)\r\n",
					"\r\n",
					"departments_df \\\r\n",
					"    .write \\\r\n",
					"    .mode(\"overwrite\") \\\r\n",
					"    .parquet(department_location)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"empDF = spark.read.parquet(employee_location)\r\n",
					"deptDF = spark.read.parquet(department_location)\r\n",
					"\r\n",
					"empDF.show()\r\n",
					"deptDF.show()"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from hyperspace import *\r\n",
					"\r\n",
					"hyperspace = Hyperspace(spark)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"emp_indexConfig = IndexConfig(\"empIndex1\", [\"deptId\"], [\"empName\"])\r\n",
					"dept_indexConfig1 = IndexConfig(\"deptIndex1\", [\"deptId\"], [\"deptName\"])\r\n",
					"dept_indexConfig2 = IndexConfig(\"deptIndex2\", [\"location\"], [\"deptName\"])"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.createIndex(empDF, emp_indexConfig)\r\n",
					"hyperspace.createIndex(deptDF, dept_indexConfig1)\r\n",
					"hyperspace.createIndex(deptDF, dept_indexConfig2)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.indexes().show()"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.deleteIndex(\"deptIndex2\")"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.indexes().show()"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.deleteIndex(\"deptIndex1\")"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.restoreIndex(\"deptIndex1\")"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.vacuumIndex(\"deptIndex2\")"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.disable(spark)\r\n",
					"\r\n",
					"\r\n",
					"hyperspace.enable(spark)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.enable(spark)\r\n",
					"\r\n",
					"empDF1 = spark \\\r\n",
					"    .read \\\r\n",
					"    .format(\"parquet\") \\\r\n",
					"    .load(employee_location)\r\n",
					"\r\n",
					"deptDF1 = spark \\\r\n",
					"    .read \\\r\n",
					"    .format(\"parquet\") \\\r\n",
					"    .load(department_location)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"empDF1.show()\r\n",
					"deptDF1.show()"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"eqFilter = deptDF1 \\\r\n",
					"    .filter(\"\"\"deptId = 20\"\"\") \\\r\n",
					"    .select(\"\"\"deptName\"\"\")\r\n",
					"\r\n",
					"eqFilter.show()\r\n",
					"\r\n",
					"hyperspace.explain(eqFilter, True, displayHTML)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"rangeFilter = deptDF1.filter(\"deptId > 20\").select(\"deptName\")\r\n",
					"\r\n",
					"rangeFilter.show()"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.explain(rangeFilter, True, displayHTML)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"eqJoin = empDF1 \\\r\n",
					"    .join(deptDF1, empDF1.deptId == deptDF1.deptId) \\\r\n",
					"    .select(empDF1.empName, deptDF1.deptName)\r\n",
					"\r\n",
					"eqJoin.show()\r\n",
					"\r\n",
					"hyperspace.explain(eqJoin, True, displayHTML)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"empDF1.createOrReplaceTempView(\"EMP\")\r\n",
					"deptDF1.createOrReplaceTempView(\"DEPT\")"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT EMP.empName, DEPT.deptName\r\n",
					"FROM EMP JOIN DEPT ON EMP.deptId = DEPT.deptId"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"query = spark.sql(\"\"\"SELECT EMP.empName, DEPT.deptName\r\n",
					"FROM EMP JOIN DEPT ON EMP.deptId = DEPT.deptId\"\"\")\r\n",
					"\r\n",
					"query.show()\r\n",
					"\r\n",
					"hyperspace.explain(query, True, displayHTML)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"hyperspace.refreshIndex(\"deptIndex1\")"
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}